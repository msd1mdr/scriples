package app.bmri.scripless.model.eo.anggotabursa;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import org.apache.commons.codec.digest.DigestUtils;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 30 11:38:43 ICT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AnggotaBursa1Impl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        KodeAb {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getKodeAb();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setKodeAb((String)value);
            }
        }
        ,
        NamaAb {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getNamaAb();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setNamaAb((String)value);
            }
        }
        ,
        NoRekening {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getNoRekening();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setNoRekening((String)value);
            }
        }
        ,
        SendMethod {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getSendMethod();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setSendMethod((String)value);
            }
        }
        ,
        FileFormat {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getFileFormat();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setFileFormat((String)value);
            }
        }
        ,
        EmailAddress {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getEmailAddress();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setEmailAddress((String)value);
            }
        }
        ,
        IpAddress {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getIpAddress();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setIpAddress((String)value);
            }
        }
        ,
        Port {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getPort();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setPort((Number)value);
            }
        }
        ,
        FtpUser {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getFtpUser();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setFtpUser((String)value);
            }
        }
        ,
        FtpPasswd {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getFtpPasswd();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setFtpPasswd((String)value);
            }
        }
        ,
        FileSize {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getFileSize();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setFileSize((String)value);
            }
        }
        ,
        Interval {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getInterval();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setInterval((Number)value);
            }
        }
        ,
        NextSchd {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getNextSchd();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setNextSchd((Date)value);
            }
        }
        ,
        Excp1 {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getExcp1();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setExcp1((String)value);
            }
        }
        ,
        Excp2 {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getExcp2();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setExcp2((String)value);
            }
        }
        ,
        Direktory {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getDirektory();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setDirektory((String)value);
            }
        }
        ,
        SerialNo {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getSerialNo();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setSerialNo((String)value);
            }
        }
        ,
        WsPasswd {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getWsPasswd();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setWsPasswd((String)value);
            }
        }
        ,
        WsUser {
            public Object get(AnggotaBursa1Impl obj) {
                return obj.getWsUser();
            }

            public void put(AnggotaBursa1Impl obj, Object value) {
                obj.setWsUser((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AnggotaBursa1Impl object);

        public abstract void put(AnggotaBursa1Impl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int KODEAB = AttributesEnum.KodeAb.index();
    public static final int NAMAAB = AttributesEnum.NamaAb.index();
    public static final int NOREKENING = AttributesEnum.NoRekening.index();
    public static final int SENDMETHOD = AttributesEnum.SendMethod.index();
    public static final int FILEFORMAT = AttributesEnum.FileFormat.index();
    public static final int EMAILADDRESS = AttributesEnum.EmailAddress.index();
    public static final int IPADDRESS = AttributesEnum.IpAddress.index();
    public static final int PORT = AttributesEnum.Port.index();
    public static final int FTPUSER = AttributesEnum.FtpUser.index();
    public static final int FTPPASSWD = AttributesEnum.FtpPasswd.index();
    public static final int FILESIZE = AttributesEnum.FileSize.index();
    public static final int INTERVAL = AttributesEnum.Interval.index();
    public static final int NEXTSCHD = AttributesEnum.NextSchd.index();
    public static final int EXCP1 = AttributesEnum.Excp1.index();
    public static final int EXCP2 = AttributesEnum.Excp2.index();
    public static final int DIREKTORY = AttributesEnum.Direktory.index();
    public static final int SERIALNO = AttributesEnum.SerialNo.index();
    public static final int WSPASSWD = AttributesEnum.WsPasswd.index();
    public static final int WSUSER = AttributesEnum.WsUser.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AnggotaBursa1Impl() {
    }

    /**
     * Gets the attribute value for KodeAb, using the alias name KodeAb.
     * @return the KodeAb
     */
    public String getKodeAb() {
        return (String)getAttributeInternal(KODEAB);
    }

    /**
     * Sets <code>value</code> as the attribute value for KodeAb.
     * @param value value to set the KodeAb
     */
    public void setKodeAb(String value) {
        setAttributeInternal(KODEAB, value);
    }

    /**
     * Gets the attribute value for NamaAb, using the alias name NamaAb.
     * @return the NamaAb
     */
    public String getNamaAb() {
        return (String)getAttributeInternal(NAMAAB);
    }

    /**
     * Sets <code>value</code> as the attribute value for NamaAb.
     * @param value value to set the NamaAb
     */
    public void setNamaAb(String value) {
        setAttributeInternal(NAMAAB, value);
    }

    /**
     * Gets the attribute value for NoRekening, using the alias name NoRekening.
     * @return the NoRekening
     */
    public String getNoRekening() {
        return (String)getAttributeInternal(NOREKENING);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoRekening.
     * @param value value to set the NoRekening
     */
    public void setNoRekening(String value) {
        setAttributeInternal(NOREKENING, value);
    }

    /**
     * Gets the attribute value for SendMethod, using the alias name SendMethod.
     * @return the SendMethod
     */
    public String getSendMethod() {
        return (String)getAttributeInternal(SENDMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for SendMethod.
     * @param value value to set the SendMethod
     */
    public void setSendMethod(String value) {
        setAttributeInternal(SENDMETHOD, value);
    }

    /**
     * Gets the attribute value for FileFormat, using the alias name FileFormat.
     * @return the FileFormat
     */
    public String getFileFormat() {
        return (String)getAttributeInternal(FILEFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileFormat.
     * @param value value to set the FileFormat
     */
    public void setFileFormat(String value) {
        setAttributeInternal(FILEFORMAT, value);
    }

    /**
     * Gets the attribute value for EmailAddress, using the alias name EmailAddress.
     * @return the EmailAddress
     */
    public String getEmailAddress() {
        return (String)getAttributeInternal(EMAILADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmailAddress.
     * @param value value to set the EmailAddress
     */
    public void setEmailAddress(String value) {
        setAttributeInternal(EMAILADDRESS, value);
    }

    /**
     * Gets the attribute value for IpAddress, using the alias name IpAddress.
     * @return the IpAddress
     */
    public String getIpAddress() {
        return (String)getAttributeInternal(IPADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for IpAddress.
     * @param value value to set the IpAddress
     */
    public void setIpAddress(String value) {
        setAttributeInternal(IPADDRESS, value);
    }

    /**
     * Gets the attribute value for Port, using the alias name Port.
     * @return the Port
     */
    public Number getPort() {
        return (Number)getAttributeInternal(PORT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Port.
     * @param value value to set the Port
     */
    public void setPort(Number value) {
        setAttributeInternal(PORT, value);
    }

    /**
     * Gets the attribute value for FtpUser, using the alias name FtpUser.
     * @return the FtpUser
     */
    public String getFtpUser() {
        return (String)getAttributeInternal(FTPUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FtpUser.
     * @param value value to set the FtpUser
     */
    public void setFtpUser(String value) {
        setAttributeInternal(FTPUSER, value);
    }

    /**
     * Gets the attribute value for FtpPasswd, using the alias name FtpPasswd.
     * @return the FtpPasswd
     */
    public String getFtpPasswd() {
        return (String)getAttributeInternal(FTPPASSWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for FtpPasswd.
     * @param value value to set the FtpPasswd
     */
    public void setFtpPasswd(String value) {
        setAttributeInternal(FTPPASSWD, value);
    }

    /**
     * Gets the attribute value for FileSize, using the alias name FileSize.
     * @return the FileSize
     */
    public String getFileSize() {
        return (String)getAttributeInternal(FILESIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileSize.
     * @param value value to set the FileSize
     */
    public void setFileSize(String value) {
        setAttributeInternal(FILESIZE, value);
    }

    /**
     * Gets the attribute value for Interval, using the alias name Interval.
     * @return the Interval
     */
    public Number getInterval() {
        return (Number)getAttributeInternal(INTERVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Interval.
     * @param value value to set the Interval
     */
    public void setInterval(Number value) {
        setAttributeInternal(INTERVAL, value);
    }

    /**
     * Gets the attribute value for NextSchd, using the alias name NextSchd.
     * @return the NextSchd
     */
    public Date getNextSchd() {
        return (Date)getAttributeInternal(NEXTSCHD);
    }

    /**
     * Sets <code>value</code> as the attribute value for NextSchd.
     * @param value value to set the NextSchd
     */
    public void setNextSchd(Date value) {
        setAttributeInternal(NEXTSCHD, value);
    }

    /**
     * Gets the attribute value for Excp1, using the alias name Excp1.
     * @return the Excp1
     */
    public String getExcp1() {
        return (String)getAttributeInternal(EXCP1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Excp1.
     * @param value value to set the Excp1
     */
    public void setExcp1(String value) {
        setAttributeInternal(EXCP1, value);
    }

    /**
     * Gets the attribute value for Excp2, using the alias name Excp2.
     * @return the Excp2
     */
    public String getExcp2() {
        return (String)getAttributeInternal(EXCP2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Excp2.
     * @param value value to set the Excp2
     */
    public void setExcp2(String value) {
        setAttributeInternal(EXCP2, value);
    }

    /**
     * Gets the attribute value for Direktory, using the alias name Direktory.
     * @return the Direktory
     */
    public String getDirektory() {
        return (String)getAttributeInternal(DIREKTORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Direktory.
     * @param value value to set the Direktory
     */
    public void setDirektory(String value) {
        setAttributeInternal(DIREKTORY, value);
    }

    /**
     * Gets the attribute value for SerialNo, using the alias name SerialNo.
     * @return the SerialNo
     */
    public String getSerialNo() {
        return (String)getAttributeInternal(SERIALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SerialNo.
     * @param value value to set the SerialNo
     */
    public void setSerialNo(String value) {
        setAttributeInternal(SERIALNO, value);
    }

    /**
     * Gets the attribute value for WsPasswd, using the alias name WsPasswd.
     * @return the WsPasswd
     */
    public String getWsPasswd() {
        return (String)getAttributeInternal(WSPASSWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for WsPasswd.
     * @param value value to set the WsPasswd
     */
    public void setWsPasswd(String value) {
        setAttributeInternal(WSPASSWD, value);
    }

    /**
     * Gets the attribute value for WsUser, using the alias name WsUser.
     * @return the WsUser
     */
    public String getWsUser() {
        return (String)getAttributeInternal(WSUSER);
    }

    /**
     * Sets <code>value</code> as the attribute value for WsUser.
     * @param value value to set the WsUser
     */
    public void setWsUser(String value) {
        setAttributeInternal(WSUSER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param kodeAb key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String kodeAb) {
        return new Key(new Object[]{kodeAb});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.bmri.scripless.model.eo.anggotabursa.AnggotaBursa1");
        }
        return mDefinitionObject;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation == DML_INSERT){
            this.setWsPasswd(DigestUtils.md5Hex(this.getWsPasswd()));
            this.setWsUser(this.getKodeAb());
        }
        
        if(operation == DML_UPDATE){
            if(checkAttributeValue("WsPasswd")){
                this.setWsPasswd(DigestUtils.md5Hex(this.getWsPasswd()));
            }
        }        
        super.doDML(operation, e);
    }


    /**
     * Check attribute whether its changed or not.
     */
    public boolean checkAttributeValue(String _attribute) {
        AttributeDefImpl _checkAttr =
            (AttributeDefImpl)getEntityDef().findAttributeDef(_attribute);
        return isAttributeChanged(_checkAttr.getIndex());
    }
}
