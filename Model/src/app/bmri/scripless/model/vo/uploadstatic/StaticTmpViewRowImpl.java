package app.bmri.scripless.model.vo.uploadstatic;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 06 22:09:51 ICT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StaticTmpViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Extref {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getExtref();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setExtref((String)value);
            }
        }
        ,
        Participantid {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getParticipantid();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setParticipantid((String)value);
            }
        }
        ,
        Participantname {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getParticipantname();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setParticipantname((String)value);
            }
        }
        ,
        Investorname {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getInvestorname();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setInvestorname((String)value);
            }
        }
        ,
        Sidnumber {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getSidnumber();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setSidnumber((String)value);
            }
        }
        ,
        Accountnumber {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getAccountnumber();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setAccountnumber((String)value);
            }
        }
        ,
        Bankaccnumber {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getBankaccnumber();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setBankaccnumber((String)value);
            }
        }
        ,
        Bankcode {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getBankcode();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setBankcode((String)value);
            }
        }
        ,
        Activitydate {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getActivitydate();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setActivitydate((String)value);
            }
        }
        ,
        Activity {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getActivity();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setActivity((String)value);
            }
        }
        ,
        CreateTime {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getCreateTime();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setCreateTime((Date)value);
            }
        }
        ,
        RowID {
            public Object get(StaticTmpViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(StaticTmpViewRowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(StaticTmpViewRowImpl object);

        public abstract void put(StaticTmpViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EXTREF = AttributesEnum.Extref.index();
    public static final int PARTICIPANTID = AttributesEnum.Participantid.index();
    public static final int PARTICIPANTNAME = AttributesEnum.Participantname.index();
    public static final int INVESTORNAME = AttributesEnum.Investorname.index();
    public static final int SIDNUMBER = AttributesEnum.Sidnumber.index();
    public static final int ACCOUNTNUMBER = AttributesEnum.Accountnumber.index();
    public static final int BANKACCNUMBER = AttributesEnum.Bankaccnumber.index();
    public static final int BANKCODE = AttributesEnum.Bankcode.index();
    public static final int ACTIVITYDATE = AttributesEnum.Activitydate.index();
    public static final int ACTIVITY = AttributesEnum.Activity.index();
    public static final int CREATETIME = AttributesEnum.CreateTime.index();
    public static final int ROWID = AttributesEnum.RowID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StaticTmpViewRowImpl() {
    }

    /**
     * Gets StaticTmp entity object.
     * @return the StaticTmp
     */
    public EntityImpl getStaticTmp() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for EXTREF using the alias name Extref.
     * @return the EXTREF
     */
    public String getExtref() {
        return (String) getAttributeInternal(EXTREF);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTREF using the alias name Extref.
     * @param value value to set the EXTREF
     */
    public void setExtref(String value) {
        setAttributeInternal(EXTREF, value);
    }

    /**
     * Gets the attribute value for PARTICIPANTID using the alias name Participantid.
     * @return the PARTICIPANTID
     */
    public String getParticipantid() {
        return (String) getAttributeInternal(PARTICIPANTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTICIPANTID using the alias name Participantid.
     * @param value value to set the PARTICIPANTID
     */
    public void setParticipantid(String value) {
        setAttributeInternal(PARTICIPANTID, value);
    }

    /**
     * Gets the attribute value for PARTICIPANTNAME using the alias name Participantname.
     * @return the PARTICIPANTNAME
     */
    public String getParticipantname() {
        return (String) getAttributeInternal(PARTICIPANTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTICIPANTNAME using the alias name Participantname.
     * @param value value to set the PARTICIPANTNAME
     */
    public void setParticipantname(String value) {
        setAttributeInternal(PARTICIPANTNAME, value);
    }

    /**
     * Gets the attribute value for INVESTORNAME using the alias name Investorname.
     * @return the INVESTORNAME
     */
    public String getInvestorname() {
        return (String) getAttributeInternal(INVESTORNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for INVESTORNAME using the alias name Investorname.
     * @param value value to set the INVESTORNAME
     */
    public void setInvestorname(String value) {
        setAttributeInternal(INVESTORNAME, value);
    }

    /**
     * Gets the attribute value for SIDNUMBER using the alias name Sidnumber.
     * @return the SIDNUMBER
     */
    public String getSidnumber() {
        return (String) getAttributeInternal(SIDNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for SIDNUMBER using the alias name Sidnumber.
     * @param value value to set the SIDNUMBER
     */
    public void setSidnumber(String value) {
        setAttributeInternal(SIDNUMBER, value);
    }

    /**
     * Gets the attribute value for ACCOUNTNUMBER using the alias name Accountnumber.
     * @return the ACCOUNTNUMBER
     */
    public String getAccountnumber() {
        return (String) getAttributeInternal(ACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCOUNTNUMBER using the alias name Accountnumber.
     * @param value value to set the ACCOUNTNUMBER
     */
    public void setAccountnumber(String value) {
        setAttributeInternal(ACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for BANKACCNUMBER using the alias name Bankaccnumber.
     * @return the BANKACCNUMBER
     */
    public String getBankaccnumber() {
        return (String) getAttributeInternal(BANKACCNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for BANKACCNUMBER using the alias name Bankaccnumber.
     * @param value value to set the BANKACCNUMBER
     */
    public void setBankaccnumber(String value) {
        setAttributeInternal(BANKACCNUMBER, value);
    }

    /**
     * Gets the attribute value for BANKCODE using the alias name Bankcode.
     * @return the BANKCODE
     */
    public String getBankcode() {
        return (String) getAttributeInternal(BANKCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for BANKCODE using the alias name Bankcode.
     * @param value value to set the BANKCODE
     */
    public void setBankcode(String value) {
        setAttributeInternal(BANKCODE, value);
    }

    /**
     * Gets the attribute value for ACTIVITYDATE using the alias name Activitydate.
     * @return the ACTIVITYDATE
     */
    public String getActivitydate() {
        return (String) getAttributeInternal(ACTIVITYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITYDATE using the alias name Activitydate.
     * @param value value to set the ACTIVITYDATE
     */
    public void setActivitydate(String value) {
        setAttributeInternal(ACTIVITYDATE, value);
    }

    /**
     * Gets the attribute value for ACTIVITY using the alias name Activity.
     * @return the ACTIVITY
     */
    public String getActivity() {
        return (String) getAttributeInternal(ACTIVITY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY using the alias name Activity.
     * @param value value to set the ACTIVITY
     */
    public void setActivity(String value) {
        setAttributeInternal(ACTIVITY, value);
    }

    /**
     * Gets the attribute value for CREATE_TIME using the alias name CreateTime.
     * @return the CREATE_TIME
     */
    public Date getCreateTime() {
        return (Date) getAttributeInternal(CREATETIME);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATE_TIME using the alias name CreateTime.
     * @param value value to set the CREATE_TIME
     */
    public void setCreateTime(Date value) {
        setAttributeInternal(CREATETIME, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
