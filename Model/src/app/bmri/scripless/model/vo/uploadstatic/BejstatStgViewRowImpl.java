package app.bmri.scripless.model.vo.uploadstatic;

import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 10 02:48:56 ICT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BejstatStgViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Extref {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getExtref();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setExtref((String)value);
            }
        }
        ,
        Partid {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getPartid();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setPartid((String)value);
            }
        }
        ,
        Partname {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getPartname();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setPartname((String)value);
            }
        }
        ,
        Ivstname {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getIvstname();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setIvstname((String)value);
            }
        }
        ,
        Sivstid {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getSivstid();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setSivstid((String)value);
            }
        }
        ,
        Sacctno {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getSacctno();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setSacctno((String)value);
            }
        }
        ,
        Acctno {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getAcctno();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setAcctno((String)value);
            }
        }
        ,
        Bnkcod {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getBnkcod();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setBnkcod((String)value);
            }
        }
        ,
        Actdate {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getActdate();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setActdate((String)value);
            }
        }
        ,
        Activity {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getActivity();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setActivity((String)value);
            }
        }
        ,
        Flag {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getFlag();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        RowID {
            public Object get(BejstatStgViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(BejstatStgViewRowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BejstatStgViewRowImpl object);

        public abstract void put(BejstatStgViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EXTREF = AttributesEnum.Extref.index();
    public static final int PARTID = AttributesEnum.Partid.index();
    public static final int PARTNAME = AttributesEnum.Partname.index();
    public static final int IVSTNAME = AttributesEnum.Ivstname.index();
    public static final int SIVSTID = AttributesEnum.Sivstid.index();
    public static final int SACCTNO = AttributesEnum.Sacctno.index();
    public static final int ACCTNO = AttributesEnum.Acctno.index();
    public static final int BNKCOD = AttributesEnum.Bnkcod.index();
    public static final int ACTDATE = AttributesEnum.Actdate.index();
    public static final int ACTIVITY = AttributesEnum.Activity.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int ROWID = AttributesEnum.RowID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BejstatStgViewRowImpl() {
    }

    /**
     * Gets BejstatStg entity object.
     * @return the BejstatStg
     */
    public EntityImpl getBejstatStg() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for EXTREF using the alias name Extref.
     * @return the EXTREF
     */
    public String getExtref() {
        return (String) getAttributeInternal(EXTREF);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTREF using the alias name Extref.
     * @param value value to set the EXTREF
     */
    public void setExtref(String value) {
        setAttributeInternal(EXTREF, value);
    }

    /**
     * Gets the attribute value for PARTID using the alias name Partid.
     * @return the PARTID
     */
    public String getPartid() {
        return (String) getAttributeInternal(PARTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTID using the alias name Partid.
     * @param value value to set the PARTID
     */
    public void setPartid(String value) {
        setAttributeInternal(PARTID, value);
    }

    /**
     * Gets the attribute value for PARTNAME using the alias name Partname.
     * @return the PARTNAME
     */
    public String getPartname() {
        return (String) getAttributeInternal(PARTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTNAME using the alias name Partname.
     * @param value value to set the PARTNAME
     */
    public void setPartname(String value) {
        setAttributeInternal(PARTNAME, value);
    }

    /**
     * Gets the attribute value for IVSTNAME using the alias name Ivstname.
     * @return the IVSTNAME
     */
    public String getIvstname() {
        return (String) getAttributeInternal(IVSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for IVSTNAME using the alias name Ivstname.
     * @param value value to set the IVSTNAME
     */
    public void setIvstname(String value) {
        setAttributeInternal(IVSTNAME, value);
    }

    /**
     * Gets the attribute value for SIVSTID using the alias name Sivstid.
     * @return the SIVSTID
     */
    public String getSivstid() {
        return (String) getAttributeInternal(SIVSTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SIVSTID using the alias name Sivstid.
     * @param value value to set the SIVSTID
     */
    public void setSivstid(String value) {
        setAttributeInternal(SIVSTID, value);
    }

    /**
     * Gets the attribute value for SACCTNO using the alias name Sacctno.
     * @return the SACCTNO
     */
    public String getSacctno() {
        return (String) getAttributeInternal(SACCTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SACCTNO using the alias name Sacctno.
     * @param value value to set the SACCTNO
     */
    public void setSacctno(String value) {
        setAttributeInternal(SACCTNO, value);
    }

    /**
     * Gets the attribute value for ACCTNO using the alias name Acctno.
     * @return the ACCTNO
     */
    public String getAcctno() {
        return (String) getAttributeInternal(ACCTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCTNO using the alias name Acctno.
     * @param value value to set the ACCTNO
     */
    public void setAcctno(String value) {
        setAttributeInternal(ACCTNO, value);
    }

    /**
     * Gets the attribute value for BNKCOD using the alias name Bnkcod.
     * @return the BNKCOD
     */
    public String getBnkcod() {
        return (String) getAttributeInternal(BNKCOD);
    }

    /**
     * Sets <code>value</code> as attribute value for BNKCOD using the alias name Bnkcod.
     * @param value value to set the BNKCOD
     */
    public void setBnkcod(String value) {
        setAttributeInternal(BNKCOD, value);
    }

    /**
     * Gets the attribute value for ACTDATE using the alias name Actdate.
     * @return the ACTDATE
     */
    public String getActdate() {
        return (String) getAttributeInternal(ACTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTDATE using the alias name Actdate.
     * @param value value to set the ACTDATE
     */
    public void setActdate(String value) {
        setAttributeInternal(ACTDATE, value);
    }

    /**
     * Gets the attribute value for ACTIVITY using the alias name Activity.
     * @return the ACTIVITY
     */
    public String getActivity() {
        return (String) getAttributeInternal(ACTIVITY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY using the alias name Activity.
     * @param value value to set the ACTIVITY
     */
    public void setActivity(String value) {
        setAttributeInternal(ACTIVITY, value);
    }

    /**
     * Gets the attribute value for FLAG using the alias name Flag.
     * @return the FLAG
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for FLAG using the alias name Flag.
     * @param value value to set the FLAG
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
