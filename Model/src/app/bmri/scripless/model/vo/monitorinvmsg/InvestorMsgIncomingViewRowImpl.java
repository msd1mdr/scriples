package app.bmri.scripless.model.vo.monitorinvmsg;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jun 19 06:07:12 ICT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvestorMsgIncomingViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        StaticAck {
            public Object get(InvestorMsgIncomingViewRowImpl obj) {
                return obj.getStaticAck();
            }

            public void put(InvestorMsgIncomingViewRowImpl obj, Object value) {
                obj.setStaticAck((Number)value);
            }
        }
        ,
        StatementAck {
            public Object get(InvestorMsgIncomingViewRowImpl obj) {
                return obj.getStatementAck();
            }

            public void put(InvestorMsgIncomingViewRowImpl obj, Object value) {
                obj.setStatementAck((Number)value);
            }
        }
        ,
        ValidationAck {
            public Object get(InvestorMsgIncomingViewRowImpl obj) {
                return obj.getValidationAck();
            }

            public void put(InvestorMsgIncomingViewRowImpl obj, Object value) {
                obj.setValidationAck((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(InvestorMsgIncomingViewRowImpl object);

        public abstract void put(InvestorMsgIncomingViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int STATICACK = AttributesEnum.StaticAck.index();
    public static final int STATEMENTACK = AttributesEnum.StatementAck.index();
    public static final int VALIDATIONACK = AttributesEnum.ValidationAck.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvestorMsgIncomingViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute StaticAck.
     * @return the StaticAck
     */
    public Number getStaticAck() {
        return (Number) getAttributeInternal(STATICACK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StaticAck.
     * @param value value to set the  StaticAck
     */
    public void setStaticAck(Number value) {
        setAttributeInternal(STATICACK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatementAck.
     * @return the StatementAck
     */
    public Number getStatementAck() {
        return (Number) getAttributeInternal(STATEMENTACK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatementAck.
     * @param value value to set the  StatementAck
     */
    public void setStatementAck(Number value) {
        setAttributeInternal(STATEMENTACK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValidationAck.
     * @return the ValidationAck
     */
    public Number getValidationAck() {
        return (Number) getAttributeInternal(VALIDATIONACK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValidationAck.
     * @param value value to set the  ValidationAck
     */
    public void setValidationAck(Number value) {
        setAttributeInternal(VALIDATIONACK, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
