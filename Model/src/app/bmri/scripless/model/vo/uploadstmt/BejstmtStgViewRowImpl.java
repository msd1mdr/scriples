package app.bmri.scripless.model.vo.uploadstmt;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 09 13:21:45 ICT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BejstmtStgViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Bankid {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getBankid();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setBankid((String)value);
            }
        }
        ,
        Extref {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getExtref();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setExtref((String)value);
            }
        }
        ,
        Acctno {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getAcctno();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setAcctno((String)value);
            }
        }
        ,
        Curcod {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getCurcod();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setCurcod((String)value);
            }
        }
        ,
        Valdat {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getValdat();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setValdat((String)value);
            }
        }
        ,
        Opnbal {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getOpnbal();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setOpnbal((Number)value);
            }
        }
        ,
        Clsbal {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getClsbal();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setClsbal((Number)value);
            }
        }
        ,
        Acnote {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getAcnote();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setAcnote((String)value);
            }
        }
        ,
        Seqnum {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getSeqnum();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setSeqnum((Number)value);
            }
        }
        ,
        Drorcr {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getDrorcr();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setDrorcr((String)value);
            }
        }
        ,
        Trntyp {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getTrntyp();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setTrntyp((String)value);
            }
        }
        ,
        Trnamt {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getTrnamt();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setTrnamt((Number)value);
            }
        }
        ,
        Trndsc {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getTrndsc();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setTrndsc((String)value);
            }
        }
        ,
        Trnref {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getTrnref();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setTrnref((String)value);
            }
        }
        ,
        Flag {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getFlag();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        RowID {
            public Object get(BejstmtStgViewRowImpl obj) {
                return obj.getRowID();
            }

            public void put(BejstmtStgViewRowImpl obj, Object value) {
                obj.setRowID((RowID)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BejstmtStgViewRowImpl object);

        public abstract void put(BejstmtStgViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int BANKID = AttributesEnum.Bankid.index();
    public static final int EXTREF = AttributesEnum.Extref.index();
    public static final int ACCTNO = AttributesEnum.Acctno.index();
    public static final int CURCOD = AttributesEnum.Curcod.index();
    public static final int VALDAT = AttributesEnum.Valdat.index();
    public static final int OPNBAL = AttributesEnum.Opnbal.index();
    public static final int CLSBAL = AttributesEnum.Clsbal.index();
    public static final int ACNOTE = AttributesEnum.Acnote.index();
    public static final int SEQNUM = AttributesEnum.Seqnum.index();
    public static final int DRORCR = AttributesEnum.Drorcr.index();
    public static final int TRNTYP = AttributesEnum.Trntyp.index();
    public static final int TRNAMT = AttributesEnum.Trnamt.index();
    public static final int TRNDSC = AttributesEnum.Trndsc.index();
    public static final int TRNREF = AttributesEnum.Trnref.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int ROWID = AttributesEnum.RowID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BejstmtStgViewRowImpl() {
    }

    /**
     * Gets BejstmtStg entity object.
     * @return the BejstmtStg
     */
    public EntityImpl getBejstmtStg() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for BANKID using the alias name Bankid.
     * @return the BANKID
     */
    public String getBankid() {
        return (String) getAttributeInternal(BANKID);
    }

    /**
     * Sets <code>value</code> as attribute value for BANKID using the alias name Bankid.
     * @param value value to set the BANKID
     */
    public void setBankid(String value) {
        setAttributeInternal(BANKID, value);
    }

    /**
     * Gets the attribute value for EXTREF using the alias name Extref.
     * @return the EXTREF
     */
    public String getExtref() {
        return (String) getAttributeInternal(EXTREF);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTREF using the alias name Extref.
     * @param value value to set the EXTREF
     */
    public void setExtref(String value) {
        setAttributeInternal(EXTREF, value);
    }

    /**
     * Gets the attribute value for ACCTNO using the alias name Acctno.
     * @return the ACCTNO
     */
    public String getAcctno() {
        return (String) getAttributeInternal(ACCTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCTNO using the alias name Acctno.
     * @param value value to set the ACCTNO
     */
    public void setAcctno(String value) {
        setAttributeInternal(ACCTNO, value);
    }

    /**
     * Gets the attribute value for CURCOD using the alias name Curcod.
     * @return the CURCOD
     */
    public String getCurcod() {
        return (String) getAttributeInternal(CURCOD);
    }

    /**
     * Sets <code>value</code> as attribute value for CURCOD using the alias name Curcod.
     * @param value value to set the CURCOD
     */
    public void setCurcod(String value) {
        setAttributeInternal(CURCOD, value);
    }

    /**
     * Gets the attribute value for VALDAT using the alias name Valdat.
     * @return the VALDAT
     */
    public String getValdat() {
        return (String) getAttributeInternal(VALDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALDAT using the alias name Valdat.
     * @param value value to set the VALDAT
     */
    public void setValdat(String value) {
        setAttributeInternal(VALDAT, value);
    }

    /**
     * Gets the attribute value for OPNBAL using the alias name Opnbal.
     * @return the OPNBAL
     */
    public Number getOpnbal() {
        return (Number) getAttributeInternal(OPNBAL);
    }

    /**
     * Sets <code>value</code> as attribute value for OPNBAL using the alias name Opnbal.
     * @param value value to set the OPNBAL
     */
    public void setOpnbal(Number value) {
        setAttributeInternal(OPNBAL, value);
    }

    /**
     * Gets the attribute value for CLSBAL using the alias name Clsbal.
     * @return the CLSBAL
     */
    public Number getClsbal() {
        return (Number) getAttributeInternal(CLSBAL);
    }

    /**
     * Sets <code>value</code> as attribute value for CLSBAL using the alias name Clsbal.
     * @param value value to set the CLSBAL
     */
    public void setClsbal(Number value) {
        setAttributeInternal(CLSBAL, value);
    }

    /**
     * Gets the attribute value for ACNOTE using the alias name Acnote.
     * @return the ACNOTE
     */
    public String getAcnote() {
        return (String) getAttributeInternal(ACNOTE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACNOTE using the alias name Acnote.
     * @param value value to set the ACNOTE
     */
    public void setAcnote(String value) {
        setAttributeInternal(ACNOTE, value);
    }

    /**
     * Gets the attribute value for SEQNUM using the alias name Seqnum.
     * @return the SEQNUM
     */
    public Number getSeqnum() {
        return (Number) getAttributeInternal(SEQNUM);
    }

    /**
     * Sets <code>value</code> as attribute value for SEQNUM using the alias name Seqnum.
     * @param value value to set the SEQNUM
     */
    public void setSeqnum(Number value) {
        setAttributeInternal(SEQNUM, value);
    }

    /**
     * Gets the attribute value for DRORCR using the alias name Drorcr.
     * @return the DRORCR
     */
    public String getDrorcr() {
        return (String) getAttributeInternal(DRORCR);
    }

    /**
     * Sets <code>value</code> as attribute value for DRORCR using the alias name Drorcr.
     * @param value value to set the DRORCR
     */
    public void setDrorcr(String value) {
        setAttributeInternal(DRORCR, value);
    }

    /**
     * Gets the attribute value for TRNTYP using the alias name Trntyp.
     * @return the TRNTYP
     */
    public String getTrntyp() {
        return (String) getAttributeInternal(TRNTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNTYP using the alias name Trntyp.
     * @param value value to set the TRNTYP
     */
    public void setTrntyp(String value) {
        setAttributeInternal(TRNTYP, value);
    }

    /**
     * Gets the attribute value for TRNAMT using the alias name Trnamt.
     * @return the TRNAMT
     */
    public Number getTrnamt() {
        return (Number) getAttributeInternal(TRNAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNAMT using the alias name Trnamt.
     * @param value value to set the TRNAMT
     */
    public void setTrnamt(Number value) {
        setAttributeInternal(TRNAMT, value);
    }

    /**
     * Gets the attribute value for TRNDSC using the alias name Trndsc.
     * @return the TRNDSC
     */
    public String getTrndsc() {
        return (String) getAttributeInternal(TRNDSC);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNDSC using the alias name Trndsc.
     * @param value value to set the TRNDSC
     */
    public void setTrndsc(String value) {
        setAttributeInternal(TRNDSC, value);
    }

    /**
     * Gets the attribute value for TRNREF using the alias name Trnref.
     * @return the TRNREF
     */
    public String getTrnref() {
        return (String) getAttributeInternal(TRNREF);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNREF using the alias name Trnref.
     * @param value value to set the TRNREF
     */
    public void setTrnref(String value) {
        setAttributeInternal(TRNREF, value);
    }

    /**
     * Gets the attribute value for FLAG using the alias name Flag.
     * @return the FLAG
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for FLAG using the alias name Flag.
     * @param value value to set the FLAG
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }

    /**
     * Gets the attribute value for ROWID using the alias name RowID.
     * @return the ROWID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROWID using the alias name RowID.
     * @param value value to set the ROWID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
